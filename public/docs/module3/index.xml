<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modulo 3 on Aprendiendo GIT</title>
    <link>http://localhost:1313/git-course/docs/module3/</link>
    <description>Recent content in Modulo 3 on Aprendiendo GIT</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/git-course/docs/module3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resolving Merge Conflicts</title>
      <link>http://localhost:1313/git-course/docs/module3/git-conflicts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/git-course/docs/module3/git-conflicts/</guid>
      <description>&lt;h2 id=&#34;1-revisión-de-los-merges-en-los-conflictos&#34;&gt;&#xD;&#xA;  &lt;strong&gt;1 Revisión de los merges en los conflictos&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-revisi%c3%b3n-de-los-merges-en-los-conflictos&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;11-por-qué-ocurren-los-conflictos&#34;&gt;&#xD;&#xA;  1.1 ¿Por qué ocurren los conflictos?&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-por-qu%c3%a9-ocurren-los-conflictos&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Los conflictos de merge se presentan cuando Git no puede aplicar automáticamente los cambios porque dos ramas han editado la misma línea o zona de un archivo, y no sabe cuál conservar. Git detiene el merge e indica que el usuario debe intervenir manualmente.&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-comprobación-de-estado-antes-del-merge&#34;&gt;&#xD;&#xA;  1.2 Comprobación de estado antes del merge&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-comprobaci%c3%b3n-de-estado-antes-del-merge&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git status&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Git indica los archivos con conflictos usando mensajes como:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Tracking Branch</title>
      <link>http://localhost:1313/git-course/docs/module3/git-tracking-branch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/git-course/docs/module3/git-tracking-branch/</guid>
      <description>&lt;h2 id=&#34;1-qué-es-una-tracking-branch&#34;&gt;&#xD;&#xA;  &lt;strong&gt;1 ¿Qué es una tracking branch?&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-qu%c3%a9-es-una-tracking-branch&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Una tracking branch es una rama local que está vinculada a una rama remota. De forma local el nombre de una rama de rastreo comienza con el nombre remoto, luego una barra diagonal y despues el nombre de la rama (&lt;code&gt;&amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code&gt;). Su función principal es hacer seguimiento de los cambios en el remoto, facilitando comandos como:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull        &lt;span style=&#34;color:#75715e&#34;&gt;# Trae cambios del remoto a tu rama local&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push        &lt;span style=&#34;color:#75715e&#34;&gt;# Envía tus commits al remoto correspondiente&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se crean automáticamente al clonar un repo o manualmente con opciones como &lt;code&gt;--set-upstream&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Networking</title>
      <link>http://localhost:1313/git-course/docs/module3/git-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/git-course/docs/module3/git-networking/</guid>
      <description>&lt;h2 id=&#34;1-git-networking-clone-fetch-pull-push&#34;&gt;&#xD;&#xA;  &lt;strong&gt;1 Git Networking: clone, fetch, pull, push&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-git-networking-clone-fetch-pull-push&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Estos comandos controlan la comunicación entre tu repositorio local y el remoto (origin). Cada uno tiene un rol específico en la sincronización de datos:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Comando&lt;/th&gt;&#xA;          &lt;th&gt;¿Qué hace?&lt;/th&gt;&#xA;          &lt;th&gt;¿Modifica el árbol de trabajo local?&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;git clone&lt;/td&gt;&#xA;          &lt;td&gt;Crea una copia del repositorio remoto en local&lt;/td&gt;&#xA;          &lt;td&gt;✅ Sí&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;git fetch&lt;/td&gt;&#xA;          &lt;td&gt;Trae los cambios del remoto pero no los aplica&lt;/td&gt;&#xA;          &lt;td&gt;❌ No&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;git pull&lt;/td&gt;&#xA;          &lt;td&gt;Equivale a fetch + merge o rebase&lt;/td&gt;&#xA;          &lt;td&gt;✅ Sí&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;git push&lt;/td&gt;&#xA;          &lt;td&gt;Envía tus commits locales al repositorio remoto&lt;/td&gt;&#xA;          &lt;td&gt;❌ No (actúa sobre el remoto)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;11-escenario-base-git-clone&#34;&gt;&#xD;&#xA;  1.1 Escenario base: &lt;code&gt;git clone&lt;/code&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-escenario-base-git-clone&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clonar un repositorio remoto&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/usuario/mi-repo.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd mi-repo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Ver ramas remotas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git branch -r&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xD;&#xA;gitGraph&#xD;&#xA;   commit id: &#34;Commit remoto A&#34; tag: &#34;origin/main&#34;&#xD;&#xA;   checkout main&#xD;&#xA;   commit id: &#34;Commit local A (copiado por clone)&#34; tag: &#34;HEAD ➜ main&#34;&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xA;&lt;h2 id=&#34;12-sincronización-fetch&#34;&gt;&#xD;&#xA;  1.2 Sincronización: &lt;code&gt;fetch&lt;/code&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-sincronizaci%c3%b3n-fetch&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;h3 id=&#34;qué-es-git-fetch&#34;&gt;&#xD;&#xA;  ¿Qué es &lt;code&gt;git fetch&lt;/code&gt;?&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#qu%c3%a9-es-git-fetch&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; es un comando que sincroniza tu repositorio local con el remoto sin alterar tu historial local. Es una forma segura de actualizar tus referencias a lo que ha ocurrido en el repositorio remoto (como nuevos &lt;code&gt;commits&lt;/code&gt; o &lt;code&gt;ramas&lt;/code&gt;), sin aplicar esos cambios directamente en tu trabajo actual.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Rebase</title>
      <link>http://localhost:1313/git-course/docs/module3/git-rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/git-course/docs/module3/git-rebase/</guid>
      <description>&lt;h2 id=&#34;1-rebasing-en-git-reescribiendo-el-historial-con-propósito&#34;&gt;&#xD;&#xA;  &lt;strong&gt;1 Rebasing en Git: Reescribiendo el historial con propósito&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-rebasing-en-git-reescribiendo-el-historial-con-prop%c3%b3sito&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Rebasing consiste en reaplicar commits de una rama sobre otra, como si se hubieran creado a partir de una base diferente. Se utiliza para mantener el historial limpio y lineal.&lt;/p&gt;&#xA;&lt;h3 id=&#34;11-formas-de-ejecutar-un-rebase&#34;&gt;&#xD;&#xA;  1.1 Formas de ejecutar un &lt;code&gt;rebase&lt;/code&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-formas-de-ejecutar-un-rebase&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1. Rebase simple (desde HEAD actual)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rebase &amp;lt;upstream&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2. Rebase explícito entre dos ramas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rebase &amp;lt;upstream&amp;gt; &amp;lt;topic-branch&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;¿Qué hace cada uno?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Rewriting History</title>
      <link>http://localhost:1313/git-course/docs/module3/git-rewriting-history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/git-course/docs/module3/git-rewriting-history/</guid>
      <description>&lt;h2 id=&#34;1-rewriting-history-en-git&#34;&gt;&#xD;&#xA;  &lt;strong&gt;1 Rewriting History en Git&lt;/strong&gt;&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-rewriting-history-en-git&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Reescribir la historia en Git permite modificar commits existentes, ya sea para corregir errores, pulir el historial, simplificar la integración, o preparar el proyecto para revisión o publicación. Esta sección cubre:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;git commit --amend&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;git rebase -i&lt;/code&gt; (interactivo)&lt;/li&gt;&#xA;&lt;li&gt;Squash merge (&lt;code&gt;--squash&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Commits seleccionados (&lt;code&gt;cherry-pick&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;11-amending&#34;&gt;&#xD;&#xA;  1.1 Amending&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-amending&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;h4 id=&#34;qué-es-amend&#34;&gt;&#xD;&#xA;  ¿Qué es Amend?&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#qu%c3%a9-es-amend&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h4&gt;&#xD;&#xA;&lt;p&gt;&lt;code&gt;git commit --amend&lt;/code&gt; permite modificar el último commit sin crear uno nuevo. Puede usarse para:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
